buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
      classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
      classpath 'org.ajoberstar:gradle-git:1.3.2'
      classpath 'org.ajoberstar:grgit:1.4.1'
    }
}

plugins {
  id 'com.matthewprenger.cursegradle' version '1.0.1'
  id 'net.saliman.cobertura' version '2.2.5'
  id 'com.github.kt3k.coveralls' version '2.0.1'
  //id "com.github.johnrengelman.shadow" version "1.2.2"
  id "net.franz-becker.gradle-lombok" version "1.3"
  id 'com.jfrog.bintray' version '1.1'
  id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.32"
}

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/1.10.2/index/index.gradle'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'curseforge'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'
apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/1.10.2/scripts/forge/deps.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task deployCurse {
    dependsOn 'curseforge227048'
}

import org.ajoberstar.grgit.*

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

//task curseTest {
//  if ( grgit.log().find ) { it.fullMessage.contains("[deploy]") {
//  curseTest.dependsOn deployCurse
//  }
//}
//}
//tasks.build.dependsOn tasks.curseforge

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task makeChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
	filePath = "changelog.html"
	untaggedName = "Current release ${project.version}"
	fromCommit = "9f90ae0c046977df53323bf6305e8bdb15cb8897"
	toRef =  "HEAD"
	templateContent = """
{{#tags}}
  <h3>{{name}}</h3>
  <ul>
    {{#commits}}
    <li> <a href="https://github.com/BuiltBrokenModding/VoltzEngine/commit/{{hash}}" target=_blank> {{{message}}}</a>
</li>
    {{/commits}}
  </ul>
{{/tags}}
"""
}

task apiZip (type: Jar) {
    if (project.getProperty("bambooshortPlanName") == "BBM-Dev") classifier = "dev-api"
    else classifier = "api"
    from sourceSets*.allSource
    include "com/builtbroken/mc/api/**"
    destinationDir = file 'output'
    mustRunAfter "jar"
}